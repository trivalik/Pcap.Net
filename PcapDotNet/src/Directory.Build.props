<Project>
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <Company>Pcap.Net</Company>
    <Copyright>Copyright Â© Pcap.Net 2010</Copyright>
    <Version>2.0.0.0</Version>
    <Authors>Boaz Brickner</Authors>
    <PackageLicenseExpression>BSD-3-Clause</PackageLicenseExpression>
    <PackageLicenseFile>$(MSBuildThisFileDirectory)../../license.txt</PackageLicenseFile>
    <PackageProjectUrl>http://pcapdot.net</PackageProjectUrl>
    <Description>
      Pcap.Net is a .NET wrapper for WinPcap/Npcap written in and C# using P/Invoke.
      It Features almost all WinPcap features and includes a packet interpretation framework.
      See http://pcapdot.net.
    </Description>
    <NoWarn>1718, 1573</NoWarn>
    <BaseIntermediateOutputPath>$(MSBuildThisFileDirectory)../obj/$(MSBuildProjectName)/</BaseIntermediateOutputPath>
    <BaseOutputPath>$(MSBuildThisFileDirectory)../bin/</BaseOutputPath>
    <AppendTargetFrameworkToOutputPath>True</AppendTargetFrameworkToOutputPath>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <IsPackable>False</IsPackable>
  </PropertyGroup>

  <!-- All none test projects -->
  <Choose>
    <When Condition=" !$(MSBuildProjectName.EndsWith('.Test')) ">
      <PropertyGroup>
        <TargetFrameworks>netstandard2.0</TargetFrameworks>
      </PropertyGroup>
    </When>
  </Choose>

  <!-- All test projects -->
  <Choose>
    <When Condition=" $(MSBuildProjectName.EndsWith('.TestUtils')) ">
      <PropertyGroup>
        <TargetFrameworks>netstandard2.0</TargetFrameworks>
        <GenerateDocumentationFile>False</GenerateDocumentationFile>
      </PropertyGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition=" $(MSBuildProjectName.EndsWith('.Test')) ">
      <PropertyGroup>
        <TargetFrameworks>net48;net6.0</TargetFrameworks>
        <GenerateDocumentationFile>False</GenerateDocumentationFile>
      </PropertyGroup>
    </When>
  </Choose>
  
</Project>
